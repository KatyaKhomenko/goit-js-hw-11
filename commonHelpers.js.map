{"version":3,"file":"commonHelpers.js","sources":["../src/js/pixabay-api.js","../src/js/render-functions.js","../src/main.js"],"sourcesContent":["const API_KEY = '45558059-b9821aa2a932c0b23c0858cef';\nconst BASE_URL = 'https://pixabay.com/api/';\n\n// Функция для выполнения HTTP-запроса\nexport function fetchImages(query) {\n    \n    const url = `${BASE_URL}?key=${API_KEY}&q=${encodeURIComponent(query)}&image_type=photo&orientation=horizontal&safesearch=true`;\n\n    return fetch(url)\n        .then(response => {\n            if (!response.ok) {\n                return Promise.reject(\n                    `Network response was not ok: ${response.statusText}`\n                    );\n            }\n            return response.json();\n        });\n}","export function clearGallery(galleryElement) {\n    galleryElement.innerHTML = '';\n}\n\nexport function renderImages(images, galleryElement) {\n\n    const markup = images.map(({ \n        webformatURL, \n        largeImageURL, \n        tags, \n        likes, \n        views, \n        comments, \n        downloads \n    }) => {\n        return `\n            <li class=\"gallery-list-item\">\n                <a class=\"gallery-link\" href=\"${largeImageURL}\">\n                    <img class=\"gallery-img\" src=\"${webformatURL}\" \n                        alt=\"${tags}\" \n                        title=\"${tags}\" />\n                    <ul class=\"sub-list\">\n                        <li class=\"sub-list-item\">\n                            <b>Likes</b>\n                            <p>${likes}</p>\n                        </li>\n                        <li class=\"sub-list-item\">\n                            <b>Views</b>\n                            <p>${views}</p>\n                        </li>\n                        <li class=\"sub-list-item\">\n                            <b>Comments</b>\n                            <p>${comments}</p>\n                        </li>\n                        <li class=\"sub-list-item\">\n                            <b>Downloads</b>\n                            <p>${downloads}</p>\n                        </li>\n                    </ul>\n                </a>\n            </li>`;\n    }).join('');\n\n\n    galleryElement.insertAdjacentHTML('beforeend', markup);\n}","import { fetchImages } from \"./js/pixabay-api.js\";\nimport { clearGallery, renderImages } from \"./js/render-functions.js\";\n\nimport iziToast from \"izitoast\";\nimport \"izitoast/dist/css/iziToast.min.css\";\n\nimport SimpleLightbox from \"simplelightbox\";\nimport \"simplelightbox/dist/simple-lightbox.min.css\";\n\nconst searchForm = document.querySelector('#search-form');\nconst gallery = document.querySelector('.gallery');\nconst loader = document.querySelector('.loader');\n\n// Инициализация SimpleLightbox для отображения изображений\nlet lightbox = new SimpleLightbox('.gallery a', {});\n\n// Добавление обработчика события на отправку формы\nsearchForm.addEventListener('submit', (event) => {\n    event.preventDefault();\n    const query = event.currentTarget.elements.query.value.trim();\n\n    // Проверка или поле ввода не пустое\n    if (query === '') {\n        iziToast.error({ message: 'Please enter a search term.' });\n        return;\n    }\n\n    // Очистка предыдущих результатов\n    clearGallery(gallery);\n\n    // Показать индикатор загрузки\n    loader.style.display = 'block';\n\n    // Выполнение запроса к API Pixabay\n    fetchImages(query)\n        .then(data => {\n            // Проверка или есть результаты\n            if (data.hits.length === 0) {\n                iziToast.info({ message: 'Sorry, there are no images matching your search query. Please try again!' });\n            } else {\n                // Отображение изображений и обновление галереи\n                renderImages(data.hits, gallery);\n                lightbox.refresh();\n            }\n        })\n        // Обработка ошибок\n        .catch(error => {\n            iziToast.error({ message: error.message });\n        })\n        // Скрываем индикатор загрузки\n        .finally(() => {\n            loader.style.display = 'none';\n        });\n});"],"names":["API_KEY","BASE_URL","fetchImages","query","url","response","clearGallery","galleryElement","renderImages","images","markup","webformatURL","largeImageURL","tags","likes","views","comments","downloads","searchForm","gallery","loader","lightbox","SimpleLightbox","event","iziToast","data","error"],"mappings":"6vBAAA,MAAMA,EAAU,qCACVC,EAAW,2BAGV,SAASC,EAAYC,EAAO,CAE/B,MAAMC,EAAM,GAAGH,CAAQ,QAAQD,CAAO,MAAM,mBAAmBG,CAAK,CAAC,2DAErE,OAAO,MAAMC,CAAG,EACX,KAAKC,GACGA,EAAS,GAKPA,EAAS,OAJL,QAAQ,OACX,gCAAgCA,EAAS,UAAU,EACvE,CAGS,CACT,CCjBO,SAASC,EAAaC,EAAgB,CACzCA,EAAe,UAAY,EAC/B,CAEO,SAASC,EAAaC,EAAQF,EAAgB,CAEjD,MAAMG,EAASD,EAAO,IAAI,CAAC,CACvB,aAAAE,EACA,cAAAC,EACA,KAAAC,EACA,MAAAC,EACA,MAAAC,EACA,SAAAC,EACA,UAAAC,CACR,IACe;AAAA;AAAA,gDAEiCL,CAAa;AAAA,oDACTD,CAAY;AAAA,+BACjCE,CAAI;AAAA,iCACFA,CAAI;AAAA;AAAA;AAAA;AAAA,iCAIJC,CAAK;AAAA;AAAA;AAAA;AAAA,iCAILC,CAAK;AAAA;AAAA;AAAA;AAAA,iCAILC,CAAQ;AAAA;AAAA;AAAA;AAAA,iCAIRC,CAAS;AAAA;AAAA;AAAA;AAAA,kBAKrC,EAAE,KAAK,EAAE,EAGVV,EAAe,mBAAmB,YAAaG,CAAM,CACzD,CCpCA,MAAMQ,EAAa,SAAS,cAAc,cAAc,EAClDC,EAAU,SAAS,cAAc,UAAU,EAC3CC,EAAS,SAAS,cAAc,SAAS,EAG/C,IAAIC,EAAW,IAAIC,EAAe,aAAc,CAAE,CAAA,EAGlDJ,EAAW,iBAAiB,SAAWK,GAAU,CAC7CA,EAAM,eAAc,EACpB,MAAMpB,EAAQoB,EAAM,cAAc,SAAS,MAAM,MAAM,OAGvD,GAAIpB,IAAU,GAAI,CACdqB,EAAS,MAAM,CAAE,QAAS,6BAA+B,CAAA,EACzD,MACH,CAGDlB,EAAaa,CAAO,EAGpBC,EAAO,MAAM,QAAU,QAGvBlB,EAAYC,CAAK,EACZ,KAAKsB,GAAQ,CAENA,EAAK,KAAK,SAAW,EACrBD,EAAS,KAAK,CAAE,QAAS,0EAA4E,CAAA,GAGrGhB,EAAaiB,EAAK,KAAMN,CAAO,EAC/BE,EAAS,QAAO,EAEhC,CAAS,EAEA,MAAMK,GAAS,CACZF,EAAS,MAAM,CAAE,QAASE,EAAM,OAAS,CAAA,CACrD,CAAS,EAEA,QAAQ,IAAM,CACXN,EAAO,MAAM,QAAU,MACnC,CAAS,CACT,CAAC"}